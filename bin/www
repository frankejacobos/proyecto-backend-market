const app = require("../app");
const http = require("http");
const logger = require("../utils/logger");

let port = normalizePort(process.env.PORT || "3000");
app.set("port", port);

let server = http.createServer(app);

server.listen(port);
server.on("error", onError);
server.on("listening", onListening);

function normalizePort(val) {
  let portTemp = parseInt(val, 10);
  if (isNaN(portTemp)) {
    return val;
  }
  if (portTemp >= 0) {
    return portTemp;
  }
  return false;
}

function onError(error) {
  logger.error("Error: " + error);
  if (error.syscall !== "listen") {
    throw error;
  }
  let bind = typeof port === "string" ? "Pipe " + port : "Port " + port;
  switch (error.code) {
    case "EACCES":
      logger.error(bind + " requires elevated privileges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      logger.error(bind + " is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  logger.info(`Listening on port ${port}`);
}
module.exports = server;
